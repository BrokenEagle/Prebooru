"""Rename similarity result to similarity data

Revision ID: 90330c1045b2
Revises: 176abfd1f48a
Create Date: 2021-07-30 01:22:29.825892

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '90330c1045b2'
down_revision = '176abfd1f48a'
branch_labels = None
depends_on = None


NAMING_CONVENTION = {
    "ix": 'ix_%(column_0_label)s',
    "uq": "uq_%(table_name)s_%(column_0_name)s",
    "ck": "ck_%(table_name)s_%(constraint_name)s",
    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    "pk": "pk_%(table_name)s"
}


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_cache():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_cache():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_similarity():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('similarity_result', schema=None, naming_convention=NAMING_CONVENTION) as batch_op:
        batch_op.drop_constraint('pk_similarity_result', type_='primary')
    op.rename_table('similarity_result', 'similarity_data')
    with op.batch_alter_table('similarity_data', schema=None, naming_convention=NAMING_CONVENTION) as batch_op:
        batch_op.create_primary_key('pk_similarity_data', ['id'])
    # ### end Alembic commands ###


def downgrade_similarity():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('similarity_data', schema=None, naming_convention=NAMING_CONVENTION) as batch_op:
        batch_op.drop_constraint('pk_similarity_data', type_='primary')
    op.rename_table('similarity_data', 'similarity_result')
    with op.batch_alter_table('similarity_result', schema=None, naming_convention=NAMING_CONVENTION) as batch_op:
        batch_op.create_primary_key('pk_similarity_result', ['id'])
    # ### end Alembic commands ###

