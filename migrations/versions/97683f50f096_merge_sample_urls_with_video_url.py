"""Merge sample URLs with video URL

Revision ID: 97683f50f096
Revises: d16d0427efd5
Create Date: 2022-06-06 17:27:56.780867

"""
from alembic import op
import sqlalchemy as sa


# ## GLOBAL VARIABLES

# revision identifiers, used by Alembic.
revision = '97683f50f096'
down_revision = 'd16d0427efd5'
branch_labels = None
depends_on = None

# Table definitions
t_illust_url = sa.Table(
    'illust_url',
    sa.MetaData(),
    sa.Column('id', sa.Integer),
    sa.Column('site_id', sa.Integer),
    sa.Column('url', sa.UnicodeText),
    sa.Column('sample_id', sa.Integer),
    sa.Column('sample', sa.UnicodeText),
    sa.Column('width', sa.Integer),
    sa.Column('height', sa.Integer),
    sa.Column('order', sa.Integer),
    sa.Column('illust_id', sa.Integer),
    sa.Column('active', sa.Boolean),
)

# ## FUNCTIONS

def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


import logging
logging.basicConfig()
logging.getLogger('sqlalchemy.connection').setLevel(logging.INFO)


def upgrade_():
    print("Adding sample columns")
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('illust_url', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sample_id', sa.Integer, nullable=True))
        batch_op.add_column(sa.Column('sample', sa.String(length=255), nullable=True))

    connection = op.get_bind()
    print("Getting video urls")
    video_url_data = connection.execute(sa.select(t_illust_url).where(t_illust_url.c.site_id == 5)).fetchall()
    video_urls = [dict(zip(t_illust_url.c.keys(), data)) for data in video_url_data]
    illust_ids = [video_url['illust_id'] for video_url in video_urls]
    print("Getting thumb urls")
    thumb_url_data = connection.execute(sa.select(t_illust_url).where(t_illust_url.c.site_id == 4, t_illust_url.c.illust_id.in_(illust_ids))).fetchall()
    thumb_urls = [dict(zip(t_illust_url.c.keys(), data)) for data in thumb_url_data]
    print("Setting sample URLs")
    for video_url in video_urls:
        thumb_url = next(filter(lambda x: x['illust_id'] == video_url['illust_id'], thumb_urls))
        #print(video_url['id'], thumb_url['url'])
        connection.execute(t_illust_url.update().where(t_illust_url.c.id == video_url['id']).values(
            sample=thumb_url['url'],
            sample_id=thumb_url['site_id'],
            ))
    print("Deleting thumb urls")
    thumb_url_ids = [thumb_url['id'] for thumb_url in thumb_urls]
    connection.execute(t_illust_url.delete().where(t_illust_url.c.id.in_(thumb_url_ids)))


    # ### end Alembic commands ###


def downgrade_():
    connection = op.get_bind()
    print("Getting video urls")
    video_url_data = connection.execute(sa.select(t_illust_url).where(t_illust_url.c.site_id == 5)).fetchall()
    video_urls = [dict(zip(t_illust_url.c.keys(), data)) for data in video_url_data]
    print("Creating thumb urls")
    for video_url in video_urls:
        video_url['url'] = video_url['sample']
        del video_url['id']
        video_url['site_id'] = video_url['sample_id']
        connection.execute(t_illust_url.insert().values(
            **video_url,
            ))

    print("Dropping sample columns")
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('illust_url', schema=None) as batch_op:
        batch_op.drop_column('sample')
        batch_op.drop_column('sample_id')

    # ### end Alembic commands ###

