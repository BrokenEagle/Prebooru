"""Add banned and deleted to boorus

Revision ID: 6b6682ffa14f
Revises: e0f58422fc61
Create Date: 2022-01-10 08:45:30.380226

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6b6682ffa14f'
down_revision = 'e0f58422fc61'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # Table definitions
    t_booru = sa.Table(
        'booru',
        sa.MetaData(),
        sa.Column('id', sa.Integer),
        sa.Column('banned', sa.Boolean),
        sa.Column('deleted', sa.Boolean),
    )

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('booru', schema=None) as batch_op:
        batch_op.add_column(sa.Column('banned', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('deleted', sa.Boolean(), nullable=True))

    connection = op.get_bind()

    booru_results = connection.execute(sa.select([
        t_booru.c.id,
        ])).fetchall()
    for [booru_id] in booru_results:
        connection.execute(t_booru.update().where(t_booru.c.id == booru_id).values(
            banned=False,
            deleted=False,
            ))

    with op.batch_alter_table('booru', schema=None) as batch_op:
        batch_op.alter_column('banned',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('deleted',
               existing_type=sa.BOOLEAN(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('booru', schema=None) as batch_op:
        batch_op.drop_column('deleted')
        batch_op.drop_column('banned')
    # ### end Alembic commands ###

