"""Differentiate tags

Revision ID: 213bda92645a
Revises: 1ac5693be102
Create Date: 2022-03-30 15:05:26.826288

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '213bda92645a'
down_revision = '1ac5693be102'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


# Table definitions
t_tag = sa.Table(
    'tag',
    sa.MetaData(),
    sa.Column('id', sa.Integer),
    sa.Column('type', sa.String),
)


def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type', sa.String(length=50), nullable=True))

    connection = op.get_bind()

    tag_results = connection.execute(sa.select([
        t_tag.c.id,
        ])).fetchall()

    for [tag_id] in tag_results:
        connection.execute(t_tag.update().where(t_tag.c.id == tag_id).values(
            type='site_tag',
            ))

    # ### end Alembic commands ###


def downgrade_():
    connection = op.get_bind()

    connection.execute(t_tag.delete().where(t_tag.c.type == 'user_tag'))

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_column('type')

    # ### end Alembic commands ###

