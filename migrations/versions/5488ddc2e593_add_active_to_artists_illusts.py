"""Add active to artists/illusts

Revision ID: 5488ddc2e593
Revises: d2dae516faf2
Create Date: 2021-06-13 17:35:03.461842

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5488ddc2e593'
down_revision = 'd2dae516faf2'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()

def upgrade_():
    # Table definitions
    t_artist = sa.Table(
        'artist',
        sa.MetaData(),
        sa.Column('id', sa.Integer),
        sa.Column('active', sa.Boolean),
    )
    t_illust = sa.Table(
        'illust',
        sa.MetaData(),
        sa.Column('id', sa.Integer),
        sa.Column('active', sa.Boolean),
    )
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('artist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('active', sa.Boolean(), nullable=True))

    with op.batch_alter_table('illust', schema=None) as batch_op:
        batch_op.add_column(sa.Column('active', sa.Boolean(), nullable=True))

    connection = op.get_bind()

    artist_results = connection.execute(sa.select([
        t_artist.c.id,
        ])).fetchall()
    for [artist_id] in artist_results:
        connection.execute(t_artist.update().where(t_artist.c.id == artist_id).values(
            active=True,
            ))

    illust_results = connection.execute(sa.select([
        t_illust.c.id
        ])).fetchall()
    for [illust_id] in illust_results:
        connection.execute(t_illust.update().where(t_illust.c.id == illust_id).values(
            active=True,
            ))

    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('illust', schema=None) as batch_op:
        batch_op.drop_column('active')

    with op.batch_alter_table('artist', schema=None) as batch_op:
        batch_op.drop_column('active')

    # ### end Alembic commands ###


def upgrade_cache():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_cache():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_similarity():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_similarity():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

